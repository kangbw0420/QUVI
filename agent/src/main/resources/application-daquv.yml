server:
  port: 8006
  address: 0.0.0.0
  servlet:
    context-path: /

spring:
  config:
    activate:
      on-profile: daquv

  # prompt db
  datasource:
    url: jdbc:postgresql://dev.daquv.com:5432/aicfo
    username: daquv
    password: daquv123!@()
    driver-class-name: org.postgresql.Driver
    hikari:
      schema: public

  bigquery:
    jdbc:
      url: 
      driver-class-name: 
    project-id: aicfo
    service-account:
      key-path: 
      email: 

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQL10Dialect
        type:
          contributor: com.vladmihalcea.hibernate.type.util.Configuration
        format_sql: true
        default_schema: public
        use_sql_comments: true
        jdbc:
          lob:
            non_contextual_creation: true

# FLOW API 설정
flow:
  project:
    id: 2605967
  api:
    key: 20240903104057549-a1b44794-1dc5-42e4-9098-36939ab89144
    url: https://api.flow.team/v1/bots/daquv@daquv.com/notifications
  register:
    email: silicao3o@daquv.com

admin:
  email: anriver@daquv.com

# API 설정
api:
  vector-store-domain: http://211.233.64.101:8000

llm:
  vllm-url: http://121.78.125.134:8000
  gemini:
    api-key:
  gpt:
    api-key:
# 로깅 설정
logging:
  level:
    com.daquv: INFO
    org.springframework.web: INFO
    org.hibernate.SQL: INFO
    org.hibernate.type.descriptor.sql.BasicBinder: INFO

profiling:
  enabled: true

# 개발환경 YAML 리소스 설정
app:
  filesystem-base-path: /home/daquv/src/qv_aicfo/agent/src/main/resources/

cors:
  allowed-origins: https://aicfodev.daquv.com,https://app.daquv.com

# 고객사 DB 연결 설정
db:
  connection:
    strategy: COMPANY_ID  # COMPANY_ID, DYNAMIC_COMPANY, ENTITY_BASED
    default:
      connection-id: 1  # 기본 DB 연결 ID (DBConnection 테이블의 id)
    entity:
      mappings:  # entity:connection_id 형식으로 매핑. 띄어쓰기 없는 쉼표로 구분
    bigquery:
      exception: true  # BigQuery 예외 처리 여부

ifserver:
  base-url: http://172.27.111.87:8181
