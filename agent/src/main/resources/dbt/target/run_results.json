{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.9.0", "generated_at": "2025-09-08T02:00:19.874321Z", "invocation_id": "b4089b39-cc36-4b94-a7bc-8d6b84eef6dd", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-08T02:00:19.763117Z", "completed_at": "2025-09-08T02:00:19.827919Z"}, {"name": "execute", "started_at": "2025-09-08T02:00:19.828212Z", "completed_at": "2025-09-08T02:00:19.828223Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.06580352783203125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aicfo.aicfo_get_all_amt", "compiled": true, "compiled_code": "\n\nSelect\n    *\n\nFROM \"aicfo\".\"public\".\"aicfo_get_all_amt\"", "relation_name": "\"aicfo\".\"public\".\"aicfo_get_all_amt\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-08T02:00:19.829667Z", "completed_at": "2025-09-08T02:00:19.831569Z"}, {"name": "execute", "started_at": "2025-09-08T02:00:19.831827Z", "completed_at": "2025-09-08T02:00:19.831832Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.002794981002807617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aicfo.aicfo_get_all_stock", "compiled": true, "compiled_code": "\n\nSelect\n    *\n\nFROM \"aicfo\".\"public\".\"aicfo_get_all_stock\"", "relation_name": "\"aicfo\".\"public\".\"aicfo_get_all_stock\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-08T02:00:19.833073Z", "completed_at": "2025-09-08T02:00:19.834842Z"}, {"name": "execute", "started_at": "2025-09-08T02:00:19.835107Z", "completed_at": "2025-09-08T02:00:19.835112Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.002603769302368164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aicfo.aicfo_get_all_trsc", "compiled": true, "compiled_code": "\n\nSelect\n    *\n\nFROM \"aicfo\".\"public\".\"aicfo_get_all_trsc\"", "relation_name": "\"aicfo\".\"public\".\"aicfo_get_all_trsc\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-08T02:00:19.836339Z", "completed_at": "2025-09-08T02:00:19.871749Z"}, {"name": "execute", "started_at": "2025-09-08T02:00:19.872105Z", "completed_at": "2025-09-08T02:00:19.872117Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.037033796310424805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.aicfo.time_spine_daily", "compiled": true, "compiled_code": "\n\nwith\n\nbase_dates as (\n    \n\n\n    \n\n\n    with rawdata as (\n\n        \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * power(2, 0)\n     + \n    \n    p1.generated_number * power(2, 1)\n     + \n    \n    p2.generated_number * power(2, 2)\n     + \n    \n    p3.generated_number * power(2, 3)\n     + \n    \n    p4.generated_number * power(2, 4)\n     + \n    \n    p5.generated_number * power(2, 5)\n     + \n    \n    p6.generated_number * power(2, 6)\n     + \n    \n    p7.generated_number * power(2, 7)\n     + \n    \n    p8.generated_number * power(2, 8)\n     + \n    \n    p9.generated_number * power(2, 9)\n     + \n    \n    p10.generated_number * power(2, 10)\n     + \n    \n    p11.generated_number * power(2, 11)\n     + \n    \n    p12.generated_number * power(2, 12)\n     + \n    \n    p13.generated_number * power(2, 13)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n     cross join \n    \n    p as p11\n     cross join \n    \n    p as p12\n     cross join \n    \n    p as p13\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 10958\n    order by generated_number\n\n\n\n    ),\n\n    all_periods as (\n\n        select (\n            \n\n    '2000-01-01' + ((interval '1 day') * (row_number() over (order by 1) - 1))\n\n\n        ) as date_day\n        from rawdata\n\n    ),\n\n    filtered as (\n\n        select *\n        from all_periods\n        where date_day <= '2030-01-01'\n\n    )\n\n    select * from filtered\n\n\n),\n\nfinal as (\n    select\n        FORMAT(date_day, 'yyyyMMdd') as date_ymd\n    from base_dates\n)\n\nselect *\nfrom final\nwhere \n    CAST(date_ymd AS INT) > CAST(FORMAT(DATEADD(DAY, -365*5, GETDATE()), 'yyyyMMdd') AS INT)\n  and CAST(date_ymd AS INT) < CAST(FORMAT(DATEADD(DAY, 30, GETDATE()), 'yyyyMMdd') AS INT)", "relation_name": "\"aicfo\".\"public\".\"time_spine_daily\"", "batch_results": null}], "elapsed_time": 0.22187519073486328, "args": {"log_path": "/home/daquv/src/qv_aicfo/agent/src/main/resources/dbt/logs", "source_freshness_run_project_hooks": false, "introspect": true, "require_explicit_package_overrides_for_builtin_materializations": true, "log_format": "default", "quiet": false, "strict_mode": false, "favor_state": false, "empty": false, "output": "text", "cache_selected_only": false, "static_parser": true, "version_check": true, "print": true, "warn_error_options": {"include": [], "exclude": []}, "project_dir": "/home/daquv/src/qv_aicfo/agent/src/main/resources/dbt", "inject_ephemeral_ctes": true, "state_modified_compare_vars": false, "skip_nodes_if_on_run_start_fails": false, "log_level_file": "debug", "macro_debugging": false, "invocation_command": "dbt compile", "profiles_dir": "/home/daquv/src/qv_aicfo/agent/src/main/resources/dbt", "indirect_selection": "eager", "send_anonymous_usage_stats": true, "which": "compile", "select": [], "require_nested_cumulative_type_params": false, "use_colors": true, "require_batched_execution_for_custom_microbatch_strategy": false, "vars": {}, "partial_parse_file_diff": true, "require_resource_names_without_spaces": false, "exclude": [], "use_colors_file": true, "partial_parse": true, "require_yaml_configuration_for_mf_time_spines": false, "write_json": true, "log_file_max_bytes": 10485760, "show_resource_report": false, "printer_width": 80, "state_modified_compare_more_unrendered_values": false, "log_format_file": "debug", "log_level": "info", "defer": false, "populate_cache": true}}