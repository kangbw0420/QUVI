semantic_models:
  - name: trsc
    model: ref('aicfo_get_all_trsc')
    description: 한화 금융 계좌의 거래 내역을 관리하는 semantic 모델. 입출금, 대출 거래, 주식 거래 등 다양한 거래 유형의 정보를 포함
    defaults:
      agg_time_dimension: test_trsc_dt
 
    entities:
      - name: trsc
        type: primary
      - name: bal
        type: foreign
        expr: acct_no

    dimensions:
      - name: view_dv
        type: categorical
        description:
          계좌 구분. 가능한 값 = [수시, 예적금, 대출, 증권, 신탁, 퇴직연금]. 사용자 질문에 view_dv가 포함되어 있으면 반드시 filter 와 group by에 반드시 포함시켜야합니다.
            예시) "수시잔액", "수시 거래내역" → acct__view_dv = '수시' , group by에 view_dv 포함 (사용자 질문에 수시가 들어있기 때문)
                 "예적금 잔액", "예적금 거래내역", "예적금 개설일자", "예적금 만기일자" → acct__view_dv = '예적금' , group by에 view_dv 포함 (사용자 질문에 예적금이 들어있기 때문) 
                 "외화 대출잔액", "대출 거래내역", "대출 개설일자", "대출 만기일자" → acct__view_dv = '대출' , group by에 view_dv 포함 (사용자 질문에 대출이 들어있기 때문)
                 "증권잔액", "외화증권 거래내역" → acct__view_dv = '증권' , group by에 view_dv 포함 (사용자 질문에 증권이 들어있기 때문)
          잔액의 group by 조건에 디폴트로 사용됩니다.
      - name: com_nm
        type: categorical
        is_partition: true
        description: 회사명. 사용자의 회사명이 올수 있고 특별히 발화되지 않으면 넣지 마세요.
      - name: bank_nm
        type: categorical
        description: 
          은행명과 증권사명. 가능한 값 = [농협은행, 신한은행, 우리은행, 하나은행, 국민은행, 기업은행, 카카오뱅크, 케이뱅크, 토스뱅크, 삼성증권, 하나증권 등]. 
          사용자 질문에 은행이라는 단어가 포함되면 **반드시 group by에 넣어주세요. 예시) "은행별 잔액" => group by에 bank_nm 포함.*
          은행명 조회시 필터는 예시와 같이 걸어주세요. 예시) "오늘 농협은행 거래 내역은" => bank_nm = '농협은행', "오늘 신한은행 거래 내역은" => bank_nm = '신한은행' , "기업은행이랑 신한은행 계좌 잔액 비교" => bank_nm IN ('기업은행', '신한은행')
      - name: acct_no
        type: categorical
        description: 
          계좌번호. 검색은 like 검색이 필수. 예시) "오늘 110111121 계좌 잔고는?" => filter = acct_no like '%110111121%'
          사용자 질문에 '계좌'또는 '통장'이라는 단어가 **하나라도 포함되어 있으면 반드시 group by에 acct_no를 반드시 넣어주세요.** 예시) "오늘 농협수시계좌* 잔고는?", "ELS계좌* 현재 잔액" => group by에 반드시 acct_no 포함(사용자질의에 "계좌"단어가 들어가 있기 되어 있기 때문)
      - name: curr_cd
        type: categorical
        description:
          화폐통화 구분. 가능한 값 = [USD, JPY 등] 
          잔액과 거래내역의 group by 조건에 디폴트로 사용됩니다.
      - name: acct_dv
        type: categorical
        description: 상품명. 검색은 like 검색이 기본
      - name: seq_no
        type: categorical
        description: 거래순번
      - name: test_trsc_dt
        type: time
        expr: TO_DATE(CAST(trsc_dt AS TEXT), 'YYYY-MM-DD')
        type_params:
          time_granularity: day
        description: 디폴트 시간설정을 위한 임의의 값이므로 무시해주세요.
      - name: trsc_dt
        type: categorical
        type_params:
          time_granularity: day
        description:
          사용자질문에서 "거래내역" 이라고 명시했으면 반드시 사용합니다. (filter조건, group by조건)
          거래일자. YYYY-MM-DD 형식으로 표현해 주세요. 일별로 보여줄때 사용합니다. 기본 시간값은 오늘 포함 이전 한달(today-30 ~ today)입니다.
          사용자 질문에서 시간 관련 단어가 있을 경우 group by에 포함시켜야 합니다.
          사용자 질문에서 "거래내역" 또는 "내역"이 있을경우 반드시 trsc_dt를 사용해야 합니다. 예시) "올해 거래내역" => trsc_dt >= '20250101', trsc_dt <= '20251231' 조회
          특정 날짜 하루만 조회할 경우 trsc에 대해 '=' 조건으로 filter 조건 추가. 예시) "작년 12월31일 거래내역" => trsc_dt = '20241231' 조회
          특정 기간부터 특정 기간까지 연속된 기간이 명시된 경우에는 해당 범위 전체를 조회해야 하며,이때는 trsc_dt에 대해 >=, <= 조건으로 filter 추가. 예시) "2월 12일 부터 3월 14일까지 거래내역" => trsc_dt >= 20250212 , trsc_dt <= 20250314 조회. 
          연속적이지 않은 날짜를 2개 이상 조회할때는 IN 조건으로 조회합니다. 예시) "1월2일, 1월 16일 거래내역" => trsc_dt IN ('20250102', '20250116') 조회
      - name: trsc_tm
        type: categorical
        description: 거래시간. trsc_month가 group by에 존재할시 절대 함께 사용하면 절대 안됩니다.
      - name: note1
        type: categorical
        description: 
          거래처/적요/메모. 기업명, 개인명, 거래처명, 메모 등 다양한 텍스트가 포함될 수 있음. 
          무조건 like 검색으로 처리해야 함. 예시) "웹케시에서 입금된거 있어?", "웹케시로 출금된거 있어?" = note1 like '%웹케시%' 조건 , "대체 거래 조회해줘" = note1 like '%대체%' 조건
          사용자 질문에 거래처/적요/메모. 기업명, 개인명, 거래처명, 메모 등 다양한 텍스트관련 단어가 있을 경우 반드시 group by에 포함시켜야 합니다 .
          2개이상의 note1을 함께 조회할경우 IN 조건으로 조회합니다. 예시) "보험료와 임대료 나간 돈" => note1 IN ('보험료', '임대료') 조회
      - name: stock_nm
        type: categorical
        description: 종목명
      - name: stock_trsc_type
        type: categorical
        description: 증권거래구분
      - name: trsc_month
        type: categorical
        expr: TO_CHAR(TO_DATE(CAST(trsc_dt AS TEXT), 'YYYYMMDD'), 'YYYYMM')
        description:
          사용자질문에서 "거래내역" 이라고 명시했으면 filter조건과 group by조건에 절대 사용하지 않습니다. 
          거래일자를 월(YYYYMM) 단위로 변환한 값. 월별로 보여줄때 사용합니다.
          사용자 질문에서 시간(month 조회) 관련 단어가 있을 경우 group by에 포함시켜야 합니다.
          특정 월만 조회할 경우 trsc에 대해 '=' 조건으로 filter 조건 추가. 예시) "올해1월 거래내역" => trsc_month = '202501' 조회
          특정 month부터 특정 month까지 연속된 기간이 명시된 경우에는 해당 범위 전체를 조회해야 하며,이때는 trsc_month에 대해 >=, <= 조건으로 filter 추가. 예시) "2월부터 5월까지 거래내역" => trsc_month >= 202502 , trsc_month <= 202505 조회. 
          연속적이지 않은 month를 **2개 이상** 조회할때는 IN 조건으로 조회합니다. 예시) "1월과 4월 거래내역" => 1월과 4월은 연속적이지 않은 month임으로, trsc_month IN ('202501', '202504'). "2월과 4월 거래내역 조회" =>  2월과 4월은 연속적이지 않은 month임으로, trsc_month IN ('202502', '202504') 조회
      - name: trsc_quarter
        type: categorical
        expr: 
          CASE 
            WHEN CAST(TO_CHAR(TO_DATE(CAST(trsc_dt AS TEXT), 'YYYYMMDD'), 'MM') AS INT) BETWEEN 1 AND 3 THEN TO_CHAR(TO_DATE(CAST(trsc_dt AS TEXT), 'YYYYMMDD'), 'YYYY') || 'Q1'
            WHEN CAST(TO_CHAR(TO_DATE(CAST(trsc_dt AS TEXT), 'YYYYMMDD'), 'MM') AS INT) BETWEEN 4 AND 6 THEN TO_CHAR(TO_DATE(CAST(trsc_dt AS TEXT), 'YYYYMMDD'), 'YYYY') || 'Q2'
            WHEN CAST(TO_CHAR(TO_DATE(CAST(trsc_dt AS TEXT), 'YYYYMMDD'), 'MM') AS INT) BETWEEN 7 AND 9 THEN TO_CHAR(TO_DATE(CAST(trsc_dt AS TEXT), 'YYYYMMDD'), 'YYYY') || 'Q3'
            ELSE TO_CHAR(TO_DATE(CAST(trsc_dt AS TEXT), 'YYYYMMDD'), 'YYYY') || 'Q4'
          END
        description:
          사용자 질문에서 "거래내역" 이라고 명시했으면 filter조건과 group by조건에 절대 사용하지 않습니다. 거래일자를 분기(YYYYQn) 단위로 변환한 값. **분기별로 보여줄 때 사용합니다.**
          사용자 질문에서 시간(quarter 조회) 관련 단어가 있을 경우 group by에 포함시켜야 합니다. 특정 분기만 조회할 경우 trsc_quarter에 대해 '=' 조건으로 filter 조건 추가. 예시) "올해 1분기 거래내역" → trsc_quarter = '2025Q1' 조회
          특정 분기부터 특정 분기까지 연속된 기간이 명시된 경우 해당 범위 전체를 조회해야 하며,  이때는 trsc_quarter에 대해 >=, <= 조건으로 filter 추가. 예시) "1분기부터 3분기까지 거래내역" → trsc_quarter >= '2025Q1' AND trsc_quarter <= '2025Q3'
          연속적이지 않은 분기를 2개 이상 조회할 때는 IN 조건으로 조회합니다.  예시) "1분기와 4분기 거래내역" → trsc_quarter IN ('2025Q1', '2025Q4').  "2분기와 4분기 거래내역" → trsc_quarter IN ('2025Q2', '2025Q4') 

    measures:
      - name: trsc_amount
        description: 거래금액
        expr: trsc_amt
        agg: sum
        agg_time_dimension: test_trsc_dt
      - name: avg_trsc_amt
        description: 평균 거래금액
        expr: trsc_amt
        agg: average
        agg_time_dimension: test_trsc_dt
      - name: trsc_balance
        description: 거래 후 잔액. 대출금을 갚고 남은 잔액
        expr: trsc_bal
        agg: average
        agg_time_dimension: test_trsc_dt
      - name: fee_amount
        description: 수수료
        expr: fee_amt
        agg: sum
        agg_time_dimension: test_trsc_dt
      - name: loan_trsc_amount
        description: 대출상환금액
        expr: loan_trsc_amt
        agg: sum
        agg_time_dimension: test_trsc_dt
      - name: trsc_intr_rate
        description: 이자율
        expr: intr_rate
        agg: average
        agg_time_dimension: test_trsc_dt
      - name: loan_intr_amount
        description: 이자납부액
        expr: loan_intr_amt
        agg: sum
        agg_time_dimension: test_trsc_dt
      - name: item_quantity
        description: 수량
        expr: item_qunt
        agg: sum
        agg_time_dimension: test_trsc_dt
      - name: pres_quantity
        description: 금잔수량
        expr: pres_qunt
        agg: sum
        agg_time_dimension: test_trsc_dt
      - name: pres_amount
        description: 금잔금액
        expr: pres_amt
        agg: sum
        agg_time_dimension: test_trsc_dt
      - name: trsc_count
        description: 거래 건수
        expr: 1
        agg: sum
        agg_time_dimension: test_trsc_dt
      - name: trsc_amount_in
        description: 입금금액
        expr: (CASE WHEN in_out_dv = '입금' THEN trsc_amt ELSE 0 END)
        agg: sum
      - name: trsc_amount_out
        description: 출금금액
        expr: (CASE WHEN in_out_dv = '출금' THEN trsc_amt ELSE 0 END)
        agg: sum
      - name: trsc_count_in
        description: 입금건수
        expr: (CASE WHEN in_out_dv = '입금' THEN 1 ELSE 0 END)
        agg: sum
      - name: trsc_count_out
        description: 출금건수
        expr: (CASE WHEN in_out_dv = '출금' THEN 1 ELSE 0 END)
        agg: sum

metrics:
  - name: total_trsc_amt
    description: 총 거래금액. 사용자 질문에서 '증권' 관련 단어가 있고, 별다른 metric 관련 언급이 없으면 디폴트 metric으로 선택해주세요.  예시) '증권계좌 거래내역', '한화 증권계좌 거래내역' => metric = 'total_trsc_amt' 포함.
    type: simple
    label: total_trsc_amt
    type_params:
      measure: trsc_amount
  - name: total_trsc_balance
    description: 총 거래후 잔액. 대출금을 갚고 남은 잔액으로써, 사용자 질문에서 '대출' 관련 단어가 있고 거래내역에 들어가는 단어(상환금액, 이자납부액 등)가 있을때 잔액관련해서 물어본다면 선택해주세요. 예시) "대출 상환금액이랑 잔액 보여줘" => metric = 'total_trsc_balance' 포함. 
    type: simple
    label: total_trsc_balance
    type_params:
      measure: trsc_balance
  - name: total_fee_amt
    description: 총 수수료
    type: simple
    label: total_fee_amt
    type_params:
      measure: fee_amount
  - name: total_loan_trsc_amt
    description: 총 대출상환금액, 총 원금상환 금액. 사용자 질문에서 '대출' 관련 단어가 있고, 별다른 metric 관련 언급이 없거나 대출원금, 대출상환액, 원금 상환(대출 언급이 없어도) 같은 언급이 있으면 디폴트 metric으로 선택해주세요. 예시) '대출 거래내역' => metric = 'total_loan_trsc_amt', "최근 6개월간 원금 상환이 없고, 이자만 납부된 대출 계좌", "원금 상환 금액" => metric = 'total_loan_trsc_amt'
    type: simple
    label: total_loan_trsc_amt
    type_params:
      measure: loan_trsc_amount
  - name: total_loan_intr_amt
    description: 총 이자납부액. 사용자 질문에서 '대출' 관련 단어(대출원금, 대출상환액, 원금 상환 등)가 있고, 이자 납부 관련 언급이 있으면 metric으로 선택해주세요. 예시) "최근 6개월간 원금 상환이 없고, 이자만 납부된 대출 계좌" => metric = 'total_loan_trsc_amt'
    type: simple
    label: total_loan_intr_amt
    type_params:
      measure: loan_intr_amount
  - name: avg_trsc_intr_rate
    description: 평균 이자율
    type: simple
    label: avg_trsc_intr_rate
    type_params:
      measure: trsc_intr_rate
  - name: total_pres_amt
    description: 총 금잔금액
    type: simple
    label: total_pres_amt
    type_params:
      measure: pres_amount
  - name: total_trsc_count
    description: 총 거래 건수
    type: simple
    label: total_trsc_count
    type_params:
      measure: trsc_count
  - name: avg_trsc_amt
    description: 평균 거래금액
    type: simple
    label: avg_trsc_amt
    type_params:
      measure: avg_trsc_amt
  - name: total_trsc_amt_in
    description: 총 입금금액. 사용자 질문에서 '증권' 또는 '대출' 관련 단어가 없고, 별다른 metric 관련 언급이 없으면 디폴트 metric으로 선택해주세요.  예시) '거래내역' => metric = 'total_trsc_amt_in'
    type: simple
    label: total_trsc_amt_in
    type_params:
      measure: trsc_amount_in
  - name: total_trsc_amt_out
    description: 총 출금금액. 사용자 질문에서 '증권' 또는 '대출' 관련 단어가 없고, 별다른 metric 관련 언급이 없으면 디폴트 metric으로 선택해주세요.  예시) '거래내역', '우리은행 1005604294618 2월 출금내역 보여줘' => metric = 'total_trsc_amt_out' 
    type: simple
    label: total_trsc_amt_out
    type_params:
      measure: trsc_amount_out
  - name: total_trsc_count_in
    description: 총 입금건수. 예시) "어제랑 오늘 입금된 내역 보여줘" -> 입금 건수를 명시하지 않았으므로 해당 metric을 사용하지 않습니다.
    type: simple
    label: total_trsc_count_in
    type_params:
      measure: trsc_count_in
  - name: total_trsc_count_out
    description: 총 출금건수. 예시) "어제랑 오늘 출금된 내역 보여줘" -> 출금 건수를 명시하지 않았으므로 해당 metric을 사용하지 않습니다.
    type: simple
    label: total_trsc_count_out
    type_params:
      measure: trsc_count_out
